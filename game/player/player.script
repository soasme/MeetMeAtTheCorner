local data = require("main.data")

local ACCEL = 0.5
local SPEED_MAX = 1.2

local function enable(self)
	msg.post(".", "enable")
end

local function disable(sef)
	msg.post(".", "disable")
end

local function set_action(self, action)
	self.action = action
end

local function cancel_action(self)
	self.action = { cmd="" }
end

local function take_action(self)
	pprint("take", self.action)
	if not self.action then return end
	if self.action.cmd == "open_box" then
		if not self.item then
			msg.post(self.action.other_id, "open_box")
			msg.post("view#talk", "display_message", {
				text="Nina: Got a lollipop.",
				other_id=go.get_id()
			})
			self.item = true
		end
	elseif self.action.cmd == "check_item" then
		if not self.item then
			msg.post("view#talk", "display_message", {
				text="Toby: Can you find my secret?",
				other_id=go.get_id(),
			})
		else
			msg.post("view#talk", "display_message", {
				text="Toby: My secret is ...\nI love you.",
				other_id=go.get_id(),
				other_meta="levelclear"
			})
		end
	elseif self.action.cmd == "move_creature" then
		msg.post(self.action.other_id, "move", {
			direction=go.get("#move", "direction")
		})
	end
end

local function input_playing (self, action_id, action)
	if action_id == hash("action") and action.pressed then
		take_action(self)
	end
end

local function collision(self, message)
	local nextpos = data.world2tile(go.get_position() + data.TILE_SIZE*go.get("#move", "direction"))
	local otherpos = data.world2tile(go.get_position(message.other_id))
	if nextpos ~= otherpos then return end
	if message.enter == false then
		cancel_action(self)
		return
	end

	if message.other_group == hash("box") then
		set_action(self, { cmd="open_box", other_id=message.other_id})
	elseif message.other_group == hash("you") then
		set_action(self, {cmd="check_item", other_id=message.other_id})
	elseif message.other_group == hash("creature") then
		set_action(self, {cmd="move_creature", other_id=message.other_id})
	else
		print("unknown collision object: " .. message.other_group)
	end
end

local function resume_message(self, message)
	if message.meta == "levelclear" then
		data.state = data.STATE_LEVELCLEAR
		if data.level == data.totallevels then
			msg.post("view#complete", "enable")
		else
			msg.post("view#levelclear", "enable")
		end
	else
		data.state = data.STATE_PLAYING
	end
end

function init(self)
	msg.post(".", "disable")
	msg.post(".", "acquire_input_focus")
	data.state = data.STATE_PLAYING
	disable(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("position") then
		go.set_position(message.pos)
		enable(self)
	elseif message_id == hash("dead") then
		dead(self)
	elseif message_id == hash("trigger_response") then
		-- collision(self, message)
	elseif message_id == hash("display_message_complete") then
		resume_message(self, message)
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_PLAYING then
		input_playing(self, action_id, action)
	end
end