local data = require("main.data")

local ACCEL = 0.5
local SPEED_MAX = 1.2

local function enable(self)
	msg.post(".", "enable")
end

local function disable(sef)
	msg.post(".", "disable")
end

local function set_action(self, action)
	self.action = action
end

local function cancel_action(self)
	self.action = nil
end

local function take_action(self)
	if not self.action then return end
	if self.action.cmd == "open_box" then
		if not self.item then
			msg.post(self.action.other_id, "open_box")
			msg.post("view#talk", "display_message", {text="Got a lollipop."})
			self.item = true
		end
	elseif self.action.cmd == "check_item" then
		if not self.item then
			msg.post("view#talk", "display_message", {text="It's a nice day."})
		else
			msg.post("view#talk", "display_message", {text="I love lollipop....\nAnd, I love you."})
		end
	end
end

local function input_playing (self, action_id, action)
	if action_id == hash("action") and action.pressed then
		take_action(self)
	end
end

local function collision(self, message)
	if message.other_group == hash("box") then
		if message.enter then
			set_action(self, { cmd="open_box", other_id=message.other_id})
		else
			cancel_action(self)
		end
	elseif message.other_group == hash("you") then
		if message.enter then
			set_action(self, {cmd="check_item", other_id=message.other_id})
		else
			cancel_action(self)
		end
	end
end

function init(self)
	msg.post(".", "disable")
	msg.post(".", "acquire_input_focus")
	self.move = vmath.vector3(0,0,0)
	self.snap = true
	data.state = data.STATE_PLAYING
	disable(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("position") then
		go.set_position(message.pos)
		enable(self)
	elseif message_id == hash("dead") then
		dead(self)
	elseif message_id == hash("trigger_response") then
		collision(self, message)
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_PLAYING then
		input_playing (self, action_id, action)
	-- elseif data.state == data.STATE_GETREADY then
	-- 	input_getready(self, action_id, action)
	-- elseif data.state == data.STATE_LEVELCLEAR then
	-- 	input_levelclear(self, action_id, action)
	-- elseif data.state == data.STATE_GAMEOVER then
	-- 	input_gameover(self, action_id, action)
	end
end